import java.lang.reflect.InvocationTargetException;

import javax.swing.GroupLayout;
import javax.swing.GroupLayout.Alignment;
import javax.swing.GroupLayout.ParallelGroup;
import javax.swing.GroupLayout.SequentialGroup;
import javax.swing.Icon;
import javax.swing.SwingUtilities;

public class InterfazDeUsuario extends javax.swing.JFrame {
  private class SamplePanel extends javax.swing.JPanel {

    /**
     * Creates new form SamplePanel
     */
    public SamplePanel(String tipoJugador, int t) {
      this.tipoJugador = tipoJugador;
      tamanioTablero = t;
      initComponents();
    }

    public javax.swing.JButton[] getBotones() {
      javax.swing.JButton[] botones = { jButton1, jButton2, jButton3, jButton4, jButton5, jButton6 };
      return botones;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {
      javax.swing.JLabel jLabel1;
      javax.swing.JLabel jLabel2;
      javax.swing.JLabel jLabel3;
      javax.swing.JLabel jLabel4;
      javax.swing.JLabel jLabel5;
      jLabel1 = new javax.swing.JLabel();
      jLabel2 = new javax.swing.JLabel();
      jLabel3 = new javax.swing.JLabel();
      jLabel4 = new javax.swing.JLabel();
      jLabel5 = new javax.swing.JLabel();
      totalPuntos = new javax.swing.JLabel();
      ptsAnteriorJugada = new javax.swing.JLabel();
      tiempoTotal = new javax.swing.JLabel();
      tiempoAnterior = new javax.swing.JLabel();
      jButton1 = new javax.swing.JButton();
      jButton2 = new javax.swing.JButton();
      jButton3 = new javax.swing.JButton();
      jButton4 = new javax.swing.JButton();
      jButton5 = new javax.swing.JButton();
      jButton6 = new javax.swing.JButton();
      nombre = new javax.swing.JLabel();

      jLabel1.setText("Nombre");

      jLabel2.setText("Pts totales");

      jLabel3.setText("Pts anterior jug");

      jLabel4.setText("Tiempo total");

      jLabel5.setText("Tiempo anterior");

      jButton1.setText("jButton1");
      jButton1.setPreferredSize(new java.awt.Dimension(40, 40));

      jButton2.setText("jButton1");
      jButton2.setPreferredSize(new java.awt.Dimension(40, 40));

      jButton3.setText("jButton1");
      jButton3.setPreferredSize(new java.awt.Dimension(40, 40));

      jButton4.setText("jButton1");
      jButton4.setPreferredSize(new java.awt.Dimension(40, 40));

      jButton5.setText("jButton1");
      jButton5.setPreferredSize(new java.awt.Dimension(40, 40));

      jButton6.setText("jButton1");
      jButton6.setPreferredSize(new java.awt.Dimension(40, 40));

      nombre.setText("jLabel6");

      javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
      this.setLayout(layout);
      layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout
          .createSequentialGroup().addContainerGap(tamanioTablero, tamanioTablero)
          .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
              .addGroup(layout.createSequentialGroup().addComponent(jLabel4)
                  .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED,
                      javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                  .addComponent(tiempoTotal))
              .addGroup(layout.createSequentialGroup().addComponent(jLabel5)
                  .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED,
                      javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                  .addComponent(tiempoAnterior))
              .addGroup(layout.createSequentialGroup()
                  .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jLabel1)
                      .addComponent(jLabel2))
                  .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED,
                      javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                  .addComponent(totalPuntos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE,
                      Short.MAX_VALUE))
              .addGroup(layout.createSequentialGroup().addComponent(jLabel3)
                  .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED,
                      javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                  .addComponent(ptsAnteriorJugada))
              .addGroup(layout.createSequentialGroup()
                  .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                      .addGroup(layout.createSequentialGroup()
                          .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE,
                              javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                          .addGap(3, 3, 3)
                          .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE,
                              javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                          .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(
                              jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE,
                              javax.swing.GroupLayout.PREFERRED_SIZE))
                      .addGroup(layout.createSequentialGroup()
                          .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE,
                              javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                          .addGap(3, 3, 3)
                          .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE,
                              javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                          .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jButton4,
                              javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE,
                              javax.swing.GroupLayout.PREFERRED_SIZE))
                      .addComponent(nombre))
                  .addGap(0, 0, Short.MAX_VALUE)))
          .addContainerGap()));
      layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout
          .createSequentialGroup().addComponent(jLabel1)
          .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(nombre).addGap(2, 2, 2)
          .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
              .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE,
                  javax.swing.GroupLayout.PREFERRED_SIZE)
              .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE,
                  javax.swing.GroupLayout.PREFERRED_SIZE)
              .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE,
                  javax.swing.GroupLayout.PREFERRED_SIZE))
          .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
          .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
              .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE,
                  javax.swing.GroupLayout.PREFERRED_SIZE)
              .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE,
                  javax.swing.GroupLayout.PREFERRED_SIZE)
              .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE,
                  javax.swing.GroupLayout.PREFERRED_SIZE))
          .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
          .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
              .addComponent(totalPuntos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE,
                  Short.MAX_VALUE)
              .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE,
                  Short.MAX_VALUE))
          .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
          .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel3)
              .addComponent(ptsAnteriorJugada))
          .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
          .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel4)
              .addComponent(tiempoTotal))
          .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE,
              Short.MAX_VALUE)
          .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel5)
              .addComponent(tiempoAnterior))));
    }// </editor-fold>

    private String tipoJugador;
    private int tamanioTablero;
    javax.swing.JLabel nombre;
    javax.swing.JLabel ptsAnteriorJugada;
    javax.swing.JLabel tiempoAnterior;
    javax.swing.JLabel tiempoTotal;
    javax.swing.JLabel totalPuntos;
    javax.swing.JButton jButton1;
    javax.swing.JButton jButton2;
    javax.swing.JButton jButton3;
    javax.swing.JButton jButton4;
    javax.swing.JButton jButton5;
    javax.swing.JButton jButton6;
    // End of variables declaration
  }

  private class PanelTablero extends javax.swing.JPanel {

    private final class ActionListenerImplementation implements java.awt.event.ActionListener {
      private final int i;
      private final int j;

      private ActionListenerImplementation(final int i, final int j) {
        this.i = i;
        this.j = j;
      }

      public void actionPerformed(final java.awt.event.ActionEvent evt) {
        /*
         * esta es la etapa de la jugada del usuario, si a este evento el usuario puede
         * seguir jugando, debe poder hacerlo. habilitar los botones parte del grupo de
         * botones de la mano del jugador que tenga una ficha que coincida con las
         * fichas que se pueden poner en ese i,j Si la etapa del turno del usuario
         * finaliza (!controller.usuarioPuedeSeguirJugando()) Se debe llamar al método
         * de la clase de controlador llamado "jugadorHumanoHizoSuTurno" Else: se
         * activan únicamente los botones en los que el usuario tiene una ficha que
         * puede jugar, para que sea una jugada válida de varias fichas.
         * 
         * int cantPuntos=tablero.getPuntos(i, j, new Ficha(Figura.ROMBO, Color.ROJO));
         * if (cantPuntos > 0){ botones[i][j].setIcon(new javax.swing.ImageIcon(
         * IMAGE_PATH + Figura.ROMBO + Color.ROJO + ".png"));
         * tablero.getFichas()[i][j]=new Ficha(Figura.ROMBO, Color.ROJO); }
         */
      }
    }

    public PanelTablero(javax.swing.JButton[][] botonesTablero) {
      initComponents(botonesTablero);
    }

    private void initComponents(javax.swing.JButton[][] botonesTablero) {
      for (int i = 0; i < Tablero.MATRIX_SIDE; i++) {
        for (int j = 0; j < Tablero.MATRIX_SIDE; j++) {
          botonesTablero[i][j] = new javax.swing.JButton();
          botonesTablero[i][j].addActionListener(new ActionListenerImplementation(i, j));
        }
      }
      final javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
      getContentPane().setLayout(layout);
      SequentialGroup sequentialGroup1, sequentialGroup2;
      ParallelGroup parallelGroup1, parallelGroup2;
      parallelGroup1 = layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING);
      sequentialGroup1 = layout.createSequentialGroup().addGap(22, 22, 22);
      parallelGroup2 = layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING);
      for (int i = Tablero.MATRIX_SIDE - 1; i >= 0; i--) {
        sequentialGroup2 = layout.createSequentialGroup();
        for (int j = 0; j < Tablero.MATRIX_SIDE; j++) {
          sequentialGroup2
              .addComponent(botonesTablero[i][j], javax.swing.GroupLayout.PREFERRED_SIZE, 40,
                  javax.swing.GroupLayout.PREFERRED_SIZE)
              .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED);
        }
        parallelGroup2.addGroup(sequentialGroup2);
      }
      layout.setHorizontalGroup(
          parallelGroup1.addGroup(sequentialGroup1.addGroup(parallelGroup2).addContainerGap(-1, Short.MAX_VALUE)));

      parallelGroup1 = layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING);
      sequentialGroup1 = layout.createSequentialGroup().addContainerGap(-1, Short.MAX_VALUE);
      for (int i = 0; i < Tablero.MATRIX_SIDE; i++) {
        parallelGroup2 = layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING);
        for (int j = Tablero.MATRIX_SIDE - 1; j >= 0; j--) {
          parallelGroup2.addComponent(botonesTablero[i][j], javax.swing.GroupLayout.PREFERRED_SIZE, 40,
              javax.swing.GroupLayout.PREFERRED_SIZE);
        }
        sequentialGroup1.addGroup(parallelGroup2).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED);
      }
      parallelGroup1.addGroup(javax.swing.GroupLayout.Alignment.TRAILING, sequentialGroup1.addContainerGap());
      layout.setVerticalGroup(parallelGroup1);
      pack();
    }

  }

  private void initComponents() {

    PanelTablero panelTablero = new PanelTablero(botonesTablero);
    jp1 = new SamplePanel("Básico", 40 * Tablero.MATRIX_SIDE + 150);
    jp2 = new SamplePanel("Mejorado", 40 * Tablero.MATRIX_SIDE + 150);
    jp3 = new SamplePanel("Humano", 40 * Tablero.MATRIX_SIDE + 150);

    setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

    final javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);

    layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(layout.createSequentialGroup().addContainerGap()
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jp1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE,
                    javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(jp2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE,
                    javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(jp3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE,
                    javax.swing.GroupLayout.PREFERRED_SIZE))
            .addContainerGap(-1, Short.MAX_VALUE).addComponent(panelTablero, javax.swing.GroupLayout.PREFERRED_SIZE,
                javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)));
    layout.setVerticalGroup(layout.createParallelGroup(Alignment.LEADING)
        .addGroup(layout.createSequentialGroup().addContainerGap()
            .addGroup(layout.createParallelGroup(Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addComponent(jp1, javax.swing.GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE,
                        javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(jp2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE,
                        javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(jp3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE,
                        javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
            .addComponent(panelTablero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE,
                javax.swing.GroupLayout.PREFERRED_SIZE)
            .addContainerGap(300, Short.MAX_VALUE)));

    pack();
  }

  private javax.swing.JButton[][] botonesTablero = new javax.swing.JButton[Tablero.MATRIX_SIDE][Tablero.MATRIX_SIDE];
  private final transient Tablero tablero;
  public static final String IMAGE_PATH = "D:\\xllEs\\Documents\\2020 - IISem\\Análisis de Algoritmos\\Qwirkle-Game-Analysis-BackTracking-JAVA-CR-2020\\Qwirkle-Game-Analysis-BackTracking-JAVA-CR-2020\\imagenes\\";
  private transient Jugador humano;
  private transient Jugador basico;
  private transient Jugador mejorado;
  SamplePanel jp1;
  SamplePanel jp2;
  SamplePanel jp3;

  public InterfazDeUsuario(final Tablero tablero, Jugador j1, Jugador j2, Jugador j3) {
    this.tablero = tablero;
    humano = j1;
    basico = j2;
    mejorado = j3;
    initComponents();
    if (j1 != null) {
      mostrarInfo(jp1, j1);
      activarBotonesParaQueElHumanoJuegue();
    }
    mostrarInfo(jp2, j2);
    mostrarInfo(jp3, j3);
  }

  private void mostrarInfo(SamplePanel jp, Jugador j) {
    jp.nombre.setText(j.getNombre());
    jp.ptsAnteriorJugada.setText("0");
    jp.tiempoAnterior.setText("0");
    jp.tiempoTotal.setText("0");
    jp.totalPuntos.setText("0");
    for (int i = 0; i < j.getMano().size(); i++) {
      jp.getBotones()[i].setIcon(new javax.swing.ImageIcon(
          InterfazDeUsuario.IMAGE_PATH + j.getMano().get(i).figura + j.getMano().get(i).color + ".png"));
    }
  }

  public void actualizarDatosJugador(Jugador j, int puntos, double tiempo) {
    if (humano != null && j.getNombre().equals(humano.getNombre()))
      actualizarInfo(jp1, humano, puntos, tiempo);
    else if (j.getNombre().equals(basico.getNombre()))
      actualizarInfo(jp2, basico, puntos, tiempo);
    else if (j.getNombre().equals(mejorado.getNombre()))
      actualizarInfo(jp3, mejorado, puntos, tiempo);
  }
  private void updateUI() {
  }

  private void actualizarInfo(SamplePanel jp, Jugador j, int puntosAnteriorJugada, double tiempoAnterior) {
    jp.tiempoTotal.setText(Double.toString(j.getTiempo()));
    jp.tiempoAnterior.setText(Double.toString(tiempoAnterior));
    jp.totalPuntos.setText(Integer.toString(j.getScore()));
    jp.ptsAnteriorJugada.setText(Integer.toString(puntosAnteriorJugada));
    int i = 0;
    while (i < j.getMano().size()) {
      jp.getBotones()[i].setIcon(new javax.swing.ImageIcon(
          InterfazDeUsuario.IMAGE_PATH + j.getMano().get(i).figura + j.getMano().get(i).color + ".png"));
      i++;
    }
    while (i < Qwirkle.CANT_CARTAS_EN_LA_MANO) {
      jp.getBotones()[i].setVisible(false);
      i++;
    }
  }

  public void activarBotonesParaQueElHumanoJuegue() {
    for (int i = 0; (i) < botonesTablero.length; (i)++) {
      for (int j = 0; (j) < botonesTablero.length; (j)++) {
        for (int k = 0; k < humano.getMano().size(); k++) {
          if (tablero.placesToPlay.get(i).get(j).contains(humano.getMano().get(k))) {
            botonesTablero[i][j].setEnabled(true);
            botonesTablero[i][j].setVisible(true);
          } else {
            botonesTablero[i][j].setEnabled(false);
            botonesTablero[i][j].setVisible(false);
          }
        }
      }
    }
  }

  public void mostrarTablero() {
    java.awt.EventQueue.invokeLater(new Runnable() {
      public void run() {
        for (int i = 0; i < Tablero.MATRIX_SIDE; i++)
          for (int j = 0; j < Tablero.MATRIX_SIDE; j++)
            if (tablero.getFichas()[i][j] != null)
              botonesTablero[i][j].setIcon(getIcon(tablero.getFichas()[i][j]));
      }
    });
  }

  private javax.swing.Icon getIcon(Ficha ficha) {
    return new javax.swing.ImageIcon(InterfazDeUsuario.IMAGE_PATH + ficha.figura + ficha.color + ".png");
  }

  public void procesarJugada(Jugada jugada, Jugador jugador, int pts, double t) {
    if (!SwingUtilities.isEventDispatchThread()) {
      SwingUtilities.invokeLater(() -> {
        procesarJugada(jugada, jugador, pts, t);
      });
    } else {
      actualizarDatosJugador(jugador, pts, t);
      for (Jugadita jugadita : jugada.jugaditas) {
        botonesTablero[jugadita.x][jugadita.y].setIcon(getIcon(jugadita.ficha));
      }
      SwingUtilities.updateComponentTreeUI(this);
    }
  }
  public void mostrarJugada(Jugada jugada) {
    for(Jugadita par:jugada.jugaditas)
        botonesTablero[par.x][par.y].setIcon(new javax.swing.ImageIcon(
          IMAGE_PATH + par.ficha.figura + par.ficha.color + ".png"));
  }
  
  //todo: Que el usuario pueda jugar las fichas de su mano donde el señor Tablero le diga 

  
}